/*
    <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) <year>  <name of author>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/

#include "RoleGoalie.h"
#include "../Behavior/BhvCatchBall.h"
void RoleGoalie::execute()
{ 
     if (WorldModel::i().isFellDown())
          doStandUp();
      else if ( WorldModel::i().getCurrentAction() == ACT_WALK)
          doCatch();
       else
           doStop();
}

void RoleGoalie::doStandUp()
{
    std::cout<<"RoleGoalie doStandup execute"<<std::endl;
    WorldModel::instance().setCurrentAction(ACT_STANDUP);
    BhvBasicStandup().execute();
};

void RoleGoalie::doCatch()
{
    BhvFocusBall().execute();
    BhvCatchBall().execute();
}

void RoleGoalie::doStop()
{
    std::cout<<"RoleGoalie doStop execute"<<std::endl;
    WorldModel& wm   = WorldModel::instance();
    Walk&       walk = Walk::instance();

    if (walk.IsPrepareDone() && wm.isStable())
    {
        cout <<"RoleGoalie::doStop : 'prepare walk done' "<<endl;
        wm.setCurrentAction(ACT_WALK);
    }
    else
    {
        cout <<"RoleGoalie::doStop : 'prepare walk done' "<<endl;
        wm.setCurrentAction(ACT_NONE);
        walk.setWalkPhase(Walk::PREPARE);
        walk.Execute(0.0,100.0,SIDE_FORWARD);
        Effectors::instance().setActionCommand();
    }
}