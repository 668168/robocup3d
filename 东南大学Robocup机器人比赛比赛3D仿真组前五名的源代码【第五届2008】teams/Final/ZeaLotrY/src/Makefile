# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#XuYuan <xychn15@yahoo.com.cn> 2006-12-05

#$Id: Makefile.am,v 1.6 2006/02/23 02:23:54 xy Exp $

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/seu-3d
pkglibdir = $(libdir)/seu-3d
pkgincludedir = $(includedir)/seu-3d
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = seu-3d-player$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config.aux/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_seu_3d_player_OBJECTS = seu_3d_player-main.$(OBJEXT) \
	seu_3d_player-Geometry.$(OBJEXT) \
	seu_3d_player-Parser.$(OBJEXT) seu_3d_player-Object.$(OBJEXT) \
	seu_3d_player-commserver.$(OBJEXT) \
	seu_3d_player-ReadBuffFD.$(OBJEXT) \
	seu_3d_player-LogData.$(OBJEXT) seu_3d_player-Logger.$(OBJEXT) \
	seu_3d_player-Agent.$(OBJEXT) \
	seu_3d_player-BasicPlayer.$(OBJEXT) \
	seu_3d_player-PlayerTraining.$(OBJEXT) \
	seu_3d_player-Player.$(OBJEXT) seu_3d_player-Action.$(OBJEXT) \
	seu_3d_player-Skill.$(OBJEXT) \
	seu_3d_player-BasicWorldModel.$(OBJEXT) \
	seu_3d_player-WorldModel.$(OBJEXT) \
	seu_3d_player-Formation.$(OBJEXT)
seu_3d_player_OBJECTS = $(am_seu_3d_player_OBJECTS)
seu_3d_player_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config.aux/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(seu_3d_player_SOURCES)
DIST_SOURCES = $(seu_3d_player_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/dennislu/ZeaLotrY/config.aux/missing --run aclocal-1.9
ALLOCA = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/dennislu/ZeaLotrY/config.aux/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/dennislu/ZeaLotrY/config.aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/dennislu/ZeaLotrY/config.aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/dennislu/ZeaLotrY/config.aux/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3

# set CXXFLAGS = NULL to disable -g -O2
CXXFLAGS = 
CYGPATH_W = echo
DEBUG_FALSE = 
DEBUG_TRUE = #
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = yes
DOXYGEN_FALSE = #
DOXYGEN_TRUE = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
HAVE_BOOST_REGEX_FALSE = #
HAVE_BOOST_REGEX_TRUE = 
HAVE_DOT = YES
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS =  _vsnprintf$U.o
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS =  _vsnprintf$U.lo
MAKEINFO = ${SHELL} /home/dennislu/ZeaLotrY/config.aux/missing --run makeinfo
NET_LIBS =  -lnsl -lresolv
OBJEXT = o
PACKAGE = seu-3d
PACKAGE_BUGREPORT = xychn15@yahoo.com.cn
PACKAGE_NAME = SEU-3D
PACKAGE_STRING = SEU-3D 0.3.c.release-5v5
PACKAGE_TARNAME = seu-3d
PACKAGE_VERSION = 0.3.c.release-5v5
PATH_SEPARATOR = :
PERL = /usr/bin/perl
RANLIB = ranlib
SALT_LIBADD = -ldl
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.3.c.release-5v5
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/dennislu/ZeaLotrY/config.aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
AUTOMAKE_OPTIONS = foreign
seu_3d_player_CXXFLAGS = -O3 -Wall
#seu_3d_player_CXXFLAGS = -O -W -Wall
seu_3d_player_CPPFLAGS = -I/usr/local/include -I/usr/local/include/rcssserver3d -I../utility/sexpr 
seu_3d_player_LDFLAGS = -L../utility/sexpr
seu_3d_player_LDADD = -lsexp
seu_3d_player_SOURCES = \
	main.cpp \
	Settings.h \
	Singleton.h \
	Geometry.h Geometry.cpp \
	Parser.h Parser.cpp \
	Object.h Object.cpp \
	commserver.h commserver.cpp ReadBuffFD.h ReadBuffFD.cpp\
	LogData.h LogData.cpp Logger.h Logger.cpp \
	Agent.h Agent.cpp \
	BasicPlayer.h BasicPlayer.cpp PlayerTraining.cpp\
	Player.h Player.cpp \
	Action.h Action.cpp \
	Skill.h Skill.cpp \
	BasicWorldModel.h BasicWorldModel.cpp \
	WorldModel.h WorldModel.cpp \
	Formation.h Formation.cpp

EXTRA_DIST = agentdb.xml formations.conf README-PLAYER
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
seu-3d-player$(EXEEXT): $(seu_3d_player_OBJECTS) $(seu_3d_player_DEPENDENCIES) 
	@rm -f seu-3d-player$(EXEEXT)
	$(CXXLINK) $(seu_3d_player_LDFLAGS) $(seu_3d_player_OBJECTS) $(seu_3d_player_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/seu_3d_player-Action.Po
include ./$(DEPDIR)/seu_3d_player-Agent.Po
include ./$(DEPDIR)/seu_3d_player-BasicPlayer.Po
include ./$(DEPDIR)/seu_3d_player-BasicWorldModel.Po
include ./$(DEPDIR)/seu_3d_player-Formation.Po
include ./$(DEPDIR)/seu_3d_player-Geometry.Po
include ./$(DEPDIR)/seu_3d_player-LogData.Po
include ./$(DEPDIR)/seu_3d_player-Logger.Po
include ./$(DEPDIR)/seu_3d_player-Object.Po
include ./$(DEPDIR)/seu_3d_player-Parser.Po
include ./$(DEPDIR)/seu_3d_player-Player.Po
include ./$(DEPDIR)/seu_3d_player-PlayerTraining.Po
include ./$(DEPDIR)/seu_3d_player-ReadBuffFD.Po
include ./$(DEPDIR)/seu_3d_player-Skill.Po
include ./$(DEPDIR)/seu_3d_player-WorldModel.Po
include ./$(DEPDIR)/seu_3d_player-commserver.Po
include ./$(DEPDIR)/seu_3d_player-main.Po

.cpp.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`; \
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`; \
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`; \
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
	then mv -f "$$depbase.Tpo" "$$depbase.Plo"; else rm -f "$$depbase.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

seu_3d_player-main.o: main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-main.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-main.Tpo" -c -o seu_3d_player-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-main.Tpo" "$(DEPDIR)/seu_3d_player-main.Po"; else rm -f "$(DEPDIR)/seu_3d_player-main.Tpo"; exit 1; fi
#	source='main.cpp' object='seu_3d_player-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

seu_3d_player-main.obj: main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-main.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-main.Tpo" -c -o seu_3d_player-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-main.Tpo" "$(DEPDIR)/seu_3d_player-main.Po"; else rm -f "$(DEPDIR)/seu_3d_player-main.Tpo"; exit 1; fi
#	source='main.cpp' object='seu_3d_player-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

seu_3d_player-Geometry.o: Geometry.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Geometry.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-Geometry.Tpo" -c -o seu_3d_player-Geometry.o `test -f 'Geometry.cpp' || echo '$(srcdir)/'`Geometry.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-Geometry.Tpo" "$(DEPDIR)/seu_3d_player-Geometry.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Geometry.Tpo"; exit 1; fi
#	source='Geometry.cpp' object='seu_3d_player-Geometry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Geometry.o `test -f 'Geometry.cpp' || echo '$(srcdir)/'`Geometry.cpp

seu_3d_player-Geometry.obj: Geometry.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Geometry.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-Geometry.Tpo" -c -o seu_3d_player-Geometry.obj `if test -f 'Geometry.cpp'; then $(CYGPATH_W) 'Geometry.cpp'; else $(CYGPATH_W) '$(srcdir)/Geometry.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-Geometry.Tpo" "$(DEPDIR)/seu_3d_player-Geometry.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Geometry.Tpo"; exit 1; fi
#	source='Geometry.cpp' object='seu_3d_player-Geometry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Geometry.obj `if test -f 'Geometry.cpp'; then $(CYGPATH_W) 'Geometry.cpp'; else $(CYGPATH_W) '$(srcdir)/Geometry.cpp'; fi`

seu_3d_player-Parser.o: Parser.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Parser.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-Parser.Tpo" -c -o seu_3d_player-Parser.o `test -f 'Parser.cpp' || echo '$(srcdir)/'`Parser.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-Parser.Tpo" "$(DEPDIR)/seu_3d_player-Parser.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Parser.Tpo"; exit 1; fi
#	source='Parser.cpp' object='seu_3d_player-Parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Parser.o `test -f 'Parser.cpp' || echo '$(srcdir)/'`Parser.cpp

seu_3d_player-Parser.obj: Parser.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Parser.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-Parser.Tpo" -c -o seu_3d_player-Parser.obj `if test -f 'Parser.cpp'; then $(CYGPATH_W) 'Parser.cpp'; else $(CYGPATH_W) '$(srcdir)/Parser.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-Parser.Tpo" "$(DEPDIR)/seu_3d_player-Parser.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Parser.Tpo"; exit 1; fi
#	source='Parser.cpp' object='seu_3d_player-Parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Parser.obj `if test -f 'Parser.cpp'; then $(CYGPATH_W) 'Parser.cpp'; else $(CYGPATH_W) '$(srcdir)/Parser.cpp'; fi`

seu_3d_player-Object.o: Object.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Object.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-Object.Tpo" -c -o seu_3d_player-Object.o `test -f 'Object.cpp' || echo '$(srcdir)/'`Object.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-Object.Tpo" "$(DEPDIR)/seu_3d_player-Object.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Object.Tpo"; exit 1; fi
#	source='Object.cpp' object='seu_3d_player-Object.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Object.o `test -f 'Object.cpp' || echo '$(srcdir)/'`Object.cpp

seu_3d_player-Object.obj: Object.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Object.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-Object.Tpo" -c -o seu_3d_player-Object.obj `if test -f 'Object.cpp'; then $(CYGPATH_W) 'Object.cpp'; else $(CYGPATH_W) '$(srcdir)/Object.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-Object.Tpo" "$(DEPDIR)/seu_3d_player-Object.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Object.Tpo"; exit 1; fi
#	source='Object.cpp' object='seu_3d_player-Object.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Object.obj `if test -f 'Object.cpp'; then $(CYGPATH_W) 'Object.cpp'; else $(CYGPATH_W) '$(srcdir)/Object.cpp'; fi`

seu_3d_player-commserver.o: commserver.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-commserver.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-commserver.Tpo" -c -o seu_3d_player-commserver.o `test -f 'commserver.cpp' || echo '$(srcdir)/'`commserver.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-commserver.Tpo" "$(DEPDIR)/seu_3d_player-commserver.Po"; else rm -f "$(DEPDIR)/seu_3d_player-commserver.Tpo"; exit 1; fi
#	source='commserver.cpp' object='seu_3d_player-commserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-commserver.o `test -f 'commserver.cpp' || echo '$(srcdir)/'`commserver.cpp

seu_3d_player-commserver.obj: commserver.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-commserver.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-commserver.Tpo" -c -o seu_3d_player-commserver.obj `if test -f 'commserver.cpp'; then $(CYGPATH_W) 'commserver.cpp'; else $(CYGPATH_W) '$(srcdir)/commserver.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-commserver.Tpo" "$(DEPDIR)/seu_3d_player-commserver.Po"; else rm -f "$(DEPDIR)/seu_3d_player-commserver.Tpo"; exit 1; fi
#	source='commserver.cpp' object='seu_3d_player-commserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-commserver.obj `if test -f 'commserver.cpp'; then $(CYGPATH_W) 'commserver.cpp'; else $(CYGPATH_W) '$(srcdir)/commserver.cpp'; fi`

seu_3d_player-ReadBuffFD.o: ReadBuffFD.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-ReadBuffFD.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-ReadBuffFD.Tpo" -c -o seu_3d_player-ReadBuffFD.o `test -f 'ReadBuffFD.cpp' || echo '$(srcdir)/'`ReadBuffFD.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-ReadBuffFD.Tpo" "$(DEPDIR)/seu_3d_player-ReadBuffFD.Po"; else rm -f "$(DEPDIR)/seu_3d_player-ReadBuffFD.Tpo"; exit 1; fi
#	source='ReadBuffFD.cpp' object='seu_3d_player-ReadBuffFD.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-ReadBuffFD.o `test -f 'ReadBuffFD.cpp' || echo '$(srcdir)/'`ReadBuffFD.cpp

seu_3d_player-ReadBuffFD.obj: ReadBuffFD.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-ReadBuffFD.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-ReadBuffFD.Tpo" -c -o seu_3d_player-ReadBuffFD.obj `if test -f 'ReadBuffFD.cpp'; then $(CYGPATH_W) 'ReadBuffFD.cpp'; else $(CYGPATH_W) '$(srcdir)/ReadBuffFD.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-ReadBuffFD.Tpo" "$(DEPDIR)/seu_3d_player-ReadBuffFD.Po"; else rm -f "$(DEPDIR)/seu_3d_player-ReadBuffFD.Tpo"; exit 1; fi
#	source='ReadBuffFD.cpp' object='seu_3d_player-ReadBuffFD.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-ReadBuffFD.obj `if test -f 'ReadBuffFD.cpp'; then $(CYGPATH_W) 'ReadBuffFD.cpp'; else $(CYGPATH_W) '$(srcdir)/ReadBuffFD.cpp'; fi`

seu_3d_player-LogData.o: LogData.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-LogData.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-LogData.Tpo" -c -o seu_3d_player-LogData.o `test -f 'LogData.cpp' || echo '$(srcdir)/'`LogData.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-LogData.Tpo" "$(DEPDIR)/seu_3d_player-LogData.Po"; else rm -f "$(DEPDIR)/seu_3d_player-LogData.Tpo"; exit 1; fi
#	source='LogData.cpp' object='seu_3d_player-LogData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-LogData.o `test -f 'LogData.cpp' || echo '$(srcdir)/'`LogData.cpp

seu_3d_player-LogData.obj: LogData.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-LogData.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-LogData.Tpo" -c -o seu_3d_player-LogData.obj `if test -f 'LogData.cpp'; then $(CYGPATH_W) 'LogData.cpp'; else $(CYGPATH_W) '$(srcdir)/LogData.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-LogData.Tpo" "$(DEPDIR)/seu_3d_player-LogData.Po"; else rm -f "$(DEPDIR)/seu_3d_player-LogData.Tpo"; exit 1; fi
#	source='LogData.cpp' object='seu_3d_player-LogData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-LogData.obj `if test -f 'LogData.cpp'; then $(CYGPATH_W) 'LogData.cpp'; else $(CYGPATH_W) '$(srcdir)/LogData.cpp'; fi`

seu_3d_player-Logger.o: Logger.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Logger.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-Logger.Tpo" -c -o seu_3d_player-Logger.o `test -f 'Logger.cpp' || echo '$(srcdir)/'`Logger.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-Logger.Tpo" "$(DEPDIR)/seu_3d_player-Logger.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Logger.Tpo"; exit 1; fi
#	source='Logger.cpp' object='seu_3d_player-Logger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Logger.o `test -f 'Logger.cpp' || echo '$(srcdir)/'`Logger.cpp

seu_3d_player-Logger.obj: Logger.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Logger.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-Logger.Tpo" -c -o seu_3d_player-Logger.obj `if test -f 'Logger.cpp'; then $(CYGPATH_W) 'Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/Logger.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-Logger.Tpo" "$(DEPDIR)/seu_3d_player-Logger.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Logger.Tpo"; exit 1; fi
#	source='Logger.cpp' object='seu_3d_player-Logger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Logger.obj `if test -f 'Logger.cpp'; then $(CYGPATH_W) 'Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/Logger.cpp'; fi`

seu_3d_player-Agent.o: Agent.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Agent.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-Agent.Tpo" -c -o seu_3d_player-Agent.o `test -f 'Agent.cpp' || echo '$(srcdir)/'`Agent.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-Agent.Tpo" "$(DEPDIR)/seu_3d_player-Agent.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Agent.Tpo"; exit 1; fi
#	source='Agent.cpp' object='seu_3d_player-Agent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Agent.o `test -f 'Agent.cpp' || echo '$(srcdir)/'`Agent.cpp

seu_3d_player-Agent.obj: Agent.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Agent.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-Agent.Tpo" -c -o seu_3d_player-Agent.obj `if test -f 'Agent.cpp'; then $(CYGPATH_W) 'Agent.cpp'; else $(CYGPATH_W) '$(srcdir)/Agent.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-Agent.Tpo" "$(DEPDIR)/seu_3d_player-Agent.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Agent.Tpo"; exit 1; fi
#	source='Agent.cpp' object='seu_3d_player-Agent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Agent.obj `if test -f 'Agent.cpp'; then $(CYGPATH_W) 'Agent.cpp'; else $(CYGPATH_W) '$(srcdir)/Agent.cpp'; fi`

seu_3d_player-BasicPlayer.o: BasicPlayer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-BasicPlayer.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-BasicPlayer.Tpo" -c -o seu_3d_player-BasicPlayer.o `test -f 'BasicPlayer.cpp' || echo '$(srcdir)/'`BasicPlayer.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-BasicPlayer.Tpo" "$(DEPDIR)/seu_3d_player-BasicPlayer.Po"; else rm -f "$(DEPDIR)/seu_3d_player-BasicPlayer.Tpo"; exit 1; fi
#	source='BasicPlayer.cpp' object='seu_3d_player-BasicPlayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-BasicPlayer.o `test -f 'BasicPlayer.cpp' || echo '$(srcdir)/'`BasicPlayer.cpp

seu_3d_player-BasicPlayer.obj: BasicPlayer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-BasicPlayer.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-BasicPlayer.Tpo" -c -o seu_3d_player-BasicPlayer.obj `if test -f 'BasicPlayer.cpp'; then $(CYGPATH_W) 'BasicPlayer.cpp'; else $(CYGPATH_W) '$(srcdir)/BasicPlayer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-BasicPlayer.Tpo" "$(DEPDIR)/seu_3d_player-BasicPlayer.Po"; else rm -f "$(DEPDIR)/seu_3d_player-BasicPlayer.Tpo"; exit 1; fi
#	source='BasicPlayer.cpp' object='seu_3d_player-BasicPlayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-BasicPlayer.obj `if test -f 'BasicPlayer.cpp'; then $(CYGPATH_W) 'BasicPlayer.cpp'; else $(CYGPATH_W) '$(srcdir)/BasicPlayer.cpp'; fi`

seu_3d_player-PlayerTraining.o: PlayerTraining.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-PlayerTraining.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-PlayerTraining.Tpo" -c -o seu_3d_player-PlayerTraining.o `test -f 'PlayerTraining.cpp' || echo '$(srcdir)/'`PlayerTraining.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-PlayerTraining.Tpo" "$(DEPDIR)/seu_3d_player-PlayerTraining.Po"; else rm -f "$(DEPDIR)/seu_3d_player-PlayerTraining.Tpo"; exit 1; fi
#	source='PlayerTraining.cpp' object='seu_3d_player-PlayerTraining.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-PlayerTraining.o `test -f 'PlayerTraining.cpp' || echo '$(srcdir)/'`PlayerTraining.cpp

seu_3d_player-PlayerTraining.obj: PlayerTraining.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-PlayerTraining.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-PlayerTraining.Tpo" -c -o seu_3d_player-PlayerTraining.obj `if test -f 'PlayerTraining.cpp'; then $(CYGPATH_W) 'PlayerTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/PlayerTraining.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-PlayerTraining.Tpo" "$(DEPDIR)/seu_3d_player-PlayerTraining.Po"; else rm -f "$(DEPDIR)/seu_3d_player-PlayerTraining.Tpo"; exit 1; fi
#	source='PlayerTraining.cpp' object='seu_3d_player-PlayerTraining.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-PlayerTraining.obj `if test -f 'PlayerTraining.cpp'; then $(CYGPATH_W) 'PlayerTraining.cpp'; else $(CYGPATH_W) '$(srcdir)/PlayerTraining.cpp'; fi`

seu_3d_player-Player.o: Player.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Player.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-Player.Tpo" -c -o seu_3d_player-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-Player.Tpo" "$(DEPDIR)/seu_3d_player-Player.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Player.Tpo"; exit 1; fi
#	source='Player.cpp' object='seu_3d_player-Player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Player.o `test -f 'Player.cpp' || echo '$(srcdir)/'`Player.cpp

seu_3d_player-Player.obj: Player.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Player.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-Player.Tpo" -c -o seu_3d_player-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-Player.Tpo" "$(DEPDIR)/seu_3d_player-Player.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Player.Tpo"; exit 1; fi
#	source='Player.cpp' object='seu_3d_player-Player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Player.obj `if test -f 'Player.cpp'; then $(CYGPATH_W) 'Player.cpp'; else $(CYGPATH_W) '$(srcdir)/Player.cpp'; fi`

seu_3d_player-Action.o: Action.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Action.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-Action.Tpo" -c -o seu_3d_player-Action.o `test -f 'Action.cpp' || echo '$(srcdir)/'`Action.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-Action.Tpo" "$(DEPDIR)/seu_3d_player-Action.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Action.Tpo"; exit 1; fi
#	source='Action.cpp' object='seu_3d_player-Action.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Action.o `test -f 'Action.cpp' || echo '$(srcdir)/'`Action.cpp

seu_3d_player-Action.obj: Action.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Action.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-Action.Tpo" -c -o seu_3d_player-Action.obj `if test -f 'Action.cpp'; then $(CYGPATH_W) 'Action.cpp'; else $(CYGPATH_W) '$(srcdir)/Action.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-Action.Tpo" "$(DEPDIR)/seu_3d_player-Action.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Action.Tpo"; exit 1; fi
#	source='Action.cpp' object='seu_3d_player-Action.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Action.obj `if test -f 'Action.cpp'; then $(CYGPATH_W) 'Action.cpp'; else $(CYGPATH_W) '$(srcdir)/Action.cpp'; fi`

seu_3d_player-Skill.o: Skill.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Skill.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-Skill.Tpo" -c -o seu_3d_player-Skill.o `test -f 'Skill.cpp' || echo '$(srcdir)/'`Skill.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-Skill.Tpo" "$(DEPDIR)/seu_3d_player-Skill.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Skill.Tpo"; exit 1; fi
#	source='Skill.cpp' object='seu_3d_player-Skill.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Skill.o `test -f 'Skill.cpp' || echo '$(srcdir)/'`Skill.cpp

seu_3d_player-Skill.obj: Skill.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Skill.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-Skill.Tpo" -c -o seu_3d_player-Skill.obj `if test -f 'Skill.cpp'; then $(CYGPATH_W) 'Skill.cpp'; else $(CYGPATH_W) '$(srcdir)/Skill.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-Skill.Tpo" "$(DEPDIR)/seu_3d_player-Skill.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Skill.Tpo"; exit 1; fi
#	source='Skill.cpp' object='seu_3d_player-Skill.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Skill.obj `if test -f 'Skill.cpp'; then $(CYGPATH_W) 'Skill.cpp'; else $(CYGPATH_W) '$(srcdir)/Skill.cpp'; fi`

seu_3d_player-BasicWorldModel.o: BasicWorldModel.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-BasicWorldModel.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-BasicWorldModel.Tpo" -c -o seu_3d_player-BasicWorldModel.o `test -f 'BasicWorldModel.cpp' || echo '$(srcdir)/'`BasicWorldModel.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-BasicWorldModel.Tpo" "$(DEPDIR)/seu_3d_player-BasicWorldModel.Po"; else rm -f "$(DEPDIR)/seu_3d_player-BasicWorldModel.Tpo"; exit 1; fi
#	source='BasicWorldModel.cpp' object='seu_3d_player-BasicWorldModel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-BasicWorldModel.o `test -f 'BasicWorldModel.cpp' || echo '$(srcdir)/'`BasicWorldModel.cpp

seu_3d_player-BasicWorldModel.obj: BasicWorldModel.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-BasicWorldModel.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-BasicWorldModel.Tpo" -c -o seu_3d_player-BasicWorldModel.obj `if test -f 'BasicWorldModel.cpp'; then $(CYGPATH_W) 'BasicWorldModel.cpp'; else $(CYGPATH_W) '$(srcdir)/BasicWorldModel.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-BasicWorldModel.Tpo" "$(DEPDIR)/seu_3d_player-BasicWorldModel.Po"; else rm -f "$(DEPDIR)/seu_3d_player-BasicWorldModel.Tpo"; exit 1; fi
#	source='BasicWorldModel.cpp' object='seu_3d_player-BasicWorldModel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-BasicWorldModel.obj `if test -f 'BasicWorldModel.cpp'; then $(CYGPATH_W) 'BasicWorldModel.cpp'; else $(CYGPATH_W) '$(srcdir)/BasicWorldModel.cpp'; fi`

seu_3d_player-WorldModel.o: WorldModel.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-WorldModel.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-WorldModel.Tpo" -c -o seu_3d_player-WorldModel.o `test -f 'WorldModel.cpp' || echo '$(srcdir)/'`WorldModel.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-WorldModel.Tpo" "$(DEPDIR)/seu_3d_player-WorldModel.Po"; else rm -f "$(DEPDIR)/seu_3d_player-WorldModel.Tpo"; exit 1; fi
#	source='WorldModel.cpp' object='seu_3d_player-WorldModel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-WorldModel.o `test -f 'WorldModel.cpp' || echo '$(srcdir)/'`WorldModel.cpp

seu_3d_player-WorldModel.obj: WorldModel.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-WorldModel.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-WorldModel.Tpo" -c -o seu_3d_player-WorldModel.obj `if test -f 'WorldModel.cpp'; then $(CYGPATH_W) 'WorldModel.cpp'; else $(CYGPATH_W) '$(srcdir)/WorldModel.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-WorldModel.Tpo" "$(DEPDIR)/seu_3d_player-WorldModel.Po"; else rm -f "$(DEPDIR)/seu_3d_player-WorldModel.Tpo"; exit 1; fi
#	source='WorldModel.cpp' object='seu_3d_player-WorldModel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-WorldModel.obj `if test -f 'WorldModel.cpp'; then $(CYGPATH_W) 'WorldModel.cpp'; else $(CYGPATH_W) '$(srcdir)/WorldModel.cpp'; fi`

seu_3d_player-Formation.o: Formation.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Formation.o -MD -MP -MF "$(DEPDIR)/seu_3d_player-Formation.Tpo" -c -o seu_3d_player-Formation.o `test -f 'Formation.cpp' || echo '$(srcdir)/'`Formation.cpp; \
	then mv -f "$(DEPDIR)/seu_3d_player-Formation.Tpo" "$(DEPDIR)/seu_3d_player-Formation.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Formation.Tpo"; exit 1; fi
#	source='Formation.cpp' object='seu_3d_player-Formation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Formation.o `test -f 'Formation.cpp' || echo '$(srcdir)/'`Formation.cpp

seu_3d_player-Formation.obj: Formation.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -MT seu_3d_player-Formation.obj -MD -MP -MF "$(DEPDIR)/seu_3d_player-Formation.Tpo" -c -o seu_3d_player-Formation.obj `if test -f 'Formation.cpp'; then $(CYGPATH_W) 'Formation.cpp'; else $(CYGPATH_W) '$(srcdir)/Formation.cpp'; fi`; \
	then mv -f "$(DEPDIR)/seu_3d_player-Formation.Tpo" "$(DEPDIR)/seu_3d_player-Formation.Po"; else rm -f "$(DEPDIR)/seu_3d_player-Formation.Tpo"; exit 1; fi
#	source='Formation.cpp' object='seu_3d_player-Formation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(seu_3d_player_CPPFLAGS) $(CPPFLAGS) $(seu_3d_player_CXXFLAGS) $(CXXFLAGS) -c -o seu_3d_player-Formation.obj `if test -f 'Formation.cpp'; then $(CYGPATH_W) 'Formation.cpp'; else $(CYGPATH_W) '$(srcdir)/Formation.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
